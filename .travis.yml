language: cpp
matrix:
  include:
    - os: linux
      sudo: required
      dist: xenial
      compiler:
        - gcc

      cache: ccache
      before_install:
        - >
          sudo apt-get install default-jdk default-jdk-headless default-jre default-jre-headless 
          python2.7-dev libpython2.7-dev libssl1.0.0 zlib1g zlib1g-dev libssl-dev libusb-1.0-0 
          libusb-1.0-0-dev libdbus-1-3 libdbus-1-dev libbluetooth3 libbluetooth-dev zlib1g zlib1g-dev 
          python-numpy python-setuptools python-wheel git cmake-qt-gui g++ make libboost-all-dev autoconf 
          automake libtool bison libpcre3-dev python3-dev python3-numpy python3-setuptools python3-wheel 
          mono-devel -qq
        - | 
            (
            rm -rf swig_build_dir
            mkdir -p swig_build_dir
            cd swig_build_dir
            curl -L https://sourceforge.net/projects/swig/files/swig/swig-4.0.0-beta1/swig-4.0.0-beta1.tar.gz --output swig-4.0.0-beta1.tar.gz
            tar xf swig-4.0.0-beta1.tar.gz
            cd swig-4.0.0-beta1
            ./configure
            make
            sudo make install
            )
      env:
        - >
          RR_CMAKE_EXTRA_ARGS="-DBUILD_PYTHON3=ON -DBoost_USE_STATIC_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DPYTHON3_EXECUTABLE=/usr/bin/python3.5 -DBUILD_PYTHON=ON -DBUILD_JAVA=ON -DBUILD_NET=ON"
        - RR_CMAKE_GENERATOR="Unix Makefiles"
  include:
    - os: linux
      sudo: required
      dist: bionic
      compiler:
        - gcc

      cache: ccache
      before_install:
        - >
          sudo apt-get install default-jdk default-jdk-headless default-jre default-jre-headless 
          python2.7-dev libpython2.7-dev libssl1.0.0 zlib1g zlib1g-dev libssl-dev libusb-1.0-0 
          libusb-1.0-0-dev libdbus-1-3 libdbus-1-dev libbluetooth3 libbluetooth-dev zlib1g zlib1g-dev 
          python-numpy python-setuptools python-wheel git cmake-qt-gui g++ make libboost-all-dev autoconf 
          automake libtool bison libpcre3-dev python3-dev python3-numpy python3-setuptools python3-wheel -qq
        - | 
            (
            rm -rf swig_build_dir
            mkdir -p swig_build_dir
            cd swig_build_dir
            curl -L https://sourceforge.net/projects/swig/files/swig/swig-4.0.0-beta1/swig-4.0.0-beta1.tar.gz --output swig-4.0.0-beta1.tar.gz
            tar xf swig-4.0.0-beta1.tar.gz
            cd swig-4.0.0-beta1            
            ./configure
            make
            sudo make install
            )
      env:
        - >
          RR_CMAKE_EXTRA_ARGS="-DBUILD_PYTHON3=ON -DBoost_USE_STATIC_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DPYTHON3_EXECUTABLE=/usr/bin/python3.5 -DBUILD_PYTHON=ON -DBUILD_JAVA=ON"
        - RR_CMAKE_GENERATOR="Unix Makefiles"
        
    - os: windows
      before_script: 
        - curl -o boost_1_68_0.zip -L https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.zip
        - unzip -q boost_1_68_0.zip
        - cd boost_1_68_0
        - ./bootstrap.bat
        - ./b2 --with-date_time --with-filesystem --with-regex --with-chrono --with-atomic --with-thread --with-random --with-program_options address-model=32 -d0
        - cd $TRAVIS_BUILD_DIR
        - choco install python2 --forceX86
        - /c/Python27/Scripts/pip install numpy
        - choco install python3 --forceX86 --params "/InstallDir:C:\Python3"
        - /c/Python3/Scripts/pip install numpy
        - choco install jdk8 --forceX86
        - curl -o swigwin-4.0.0-beta1.zip -L https://sourceforge.net/projects/swig/files/swigwin/swigwin-4.0.0-beta1/swigwin-4.0.0-beta1.zip/download
        - unzip -q swigwin-4.0.0-beta1.zip
        - cd $TRAVIS_BUILD_DIR
      env:
        - >
          RR_CMAKE_EXTRA_ARGS="-DSWIG_EXECUTABLE=$TRAVIS_BUILD_DIR/swigwin-4.0.0-beta1/swig.exe -DSWIG_DIR=$TRAVIS_BUILD_DIR/swigwin-4.0.0-beta1/Lib -DBUILD_NET=ON -DBoost_USE_STATIC_LIBS=ON -DBOOST_INCLUDEDIR=$TRAVIS_BUILD_DIR/boost_1_68_0 -DBOOST_LIBRARYDIR=$TRAVIS_BUILD_DIR/boost_1_68_0/stage/lib -DPYTHON_EXECUTABLE=C:/Python27/python.exe -DPYTHON3_EXECUTABLE=C:/Python3/python.exe -DBUILD_PYTHON=ON -DBUILD_PYTHON3=ON -DBUILD_JAVA=ON"
        - RR_CMAKE_GENERATOR="Visual Studio 15 2017"
        
    - os: windows
      before_script: 
        - curl -o boost_1_68_0.zip -L https://dl.bintray.com/boostorg/release/1.68.0/source/boost_1_68_0.zip
        - unzip -q boost_1_68_0.zip
        - cd boost_1_68_0
        - ./bootstrap.bat
        - ./b2 --with-date_time --with-filesystem --with-regex --with-chrono --with-atomic --with-thread --with-random --with-program_options address-model=64 -d0
        - cd $TRAVIS_BUILD_DIR
        - choco install python2
        - /c/Python27/Scripts/pip install numpy
        - choco install python3 --params "/InstallDir:C:\Python3"
        - /c/Python3/Scripts/pip install numpy
        - choco install jdk8
        - curl -o swigwin-4.0.0-beta1.zip -L https://sourceforge.net/projects/swig/files/swigwin/swigwin-4.0.0-beta1/swigwin-4.0.0-beta1.zip/download
        - unzip -q swigwin-4.0.0-beta1.zip
        - cd $TRAVIS_BUILD_DIR
      env:
        - >
          RR_CMAKE_EXTRA_ARGS="-DSWIG_EXECUTABLE=$TRAVIS_BUILD_DIR/swigwin-4.0.0-beta1/swig.exe -DSWIG_DIR=$TRAVIS_BUILD_DIR/swigwin-4.0.0-beta1/Lib -DBUILD_NET=ON -DBoost_USE_STATIC_LIBS=ON -DBOOST_INCLUDEDIR=$TRAVIS_BUILD_DIR/boost_1_68_0 -DBOOST_LIBRARYDIR=$TRAVIS_BUILD_DIR/boost_1_68_0/stage/lib -DPYTHON_EXECUTABLE=C:/Python27/python.exe -DPYTHON3_EXECUTABLE=C:/Python3/python.exe -DBUILD_PYTHON=ON -DBUILD_PYTHON3=ON -DBUILD_JAVA=ON"
        - RR_CMAKE_GENERATOR="Visual Studio 15 2017 Win64"
        
    
    - os: osx
      before_script:
        - brew install openssl
        #- brew install boost # Already installed on travis ci image??
        #- brew install swig
        - | 
            (
            rm -rf swig_build_dir
            mkdir -p swig_build_dir
            cd swig_build_dir
            curl -L https://sourceforge.net/projects/swig/files/swig/swig-4.0.0-beta1/swig-4.0.0-beta1.tar.gz --output swig-4.0.0-beta1.tar.gz
            tar xf swig-4.0.0-beta1.tar.gz
            cd swig-4.0.0-beta1
            ./configure
            make
            sudo make install
            )
      env:
        - >
          RR_CMAKE_EXTRA_ARGS="-DBUILD_PYTHON=ON -DBUILD_JAVA=ON -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl"
        - RR_CMAKE_GENERATOR="Xcode"
        - RR_CMAKE_TEST_TARGET=RUN_TESTS
script:
  - mkdir -p build
  - cd build
  - cmake -G "$RR_CMAKE_GENERATOR" -DBUILD_GEN=ON -DBUILD_TEST=ON $RR_CMAKE_EXTRA_ARGS ..
  - cmake --build . --config Release
  - ctest . -C Release -V
