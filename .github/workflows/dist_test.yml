name: Dist Test

on: 
  workflow_dispatch:
    inputs:
      ref:
        description: 'git ref to run against'
        required: true

jobs:
  build-ubuntu:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    steps:
    - uses: actions/checkout@v2
      with:
        ref: '${{ github.event.inputs.ref }}'
        repository: robotraconteur/robotraconteur
    - name: add PPA
      run: sudo add-apt-repository ppa:robotraconteur/ppa -y     
    - name: apt update
      run: sudo apt update
    - name: apt
      run: >
        sudo apt-get install robotraconteur-dev python3-robotraconteur libboost-all-dev libbluetooth-dev
        libdbus-1-dev libssl-dev libusb-1.0-0-dev  -q 
    - name: apt python2
      if: matrix.os != 'ubuntu-20.04'
      run: >
        sudo apt-get install python-robotraconteur -q
    - name: configure
      run: >
        mkdir build && cd build &&
        cmake -G "Unix Makefiles" -DBUILD_CORE=OFF -DBUILD_TEST=ON -DBUILD_TESTING=ON
        ..
    - name: build
      run: |        
        cd build
        cmake --build . --config Release -j 4
    - name: test cpp
      run: |
        cd build
        ctest . -C Release --output-on-failure
    - name: test python
      if: matrix.os != 'ubuntu-20.04'
      env:
        ROBOTRACONTEUR_ROBDEF_PATH: '${{ github.workspace }}/testing/RobotRaconteurTest'
      run: |
        cd RobotRaconteurPython/test
        python RobotRaconteurPythonTest.py loopback
    - name: test python3
      if: matrix.os == 'false'
      env:
        ROBOTRACONTEUR_ROBDEF_PATH: '${{ github.workspace }}/testing/RobotRaconteurTest'
      run: |
        cd RobotRaconteurPython/test
        python3 RobotRaconteurPythonTest.py loopback

  build-win:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        arch: [x64,x86]

    steps:
    - uses: actions/checkout@v2
      with:
        ref: '${{ github.event.inputs.ref }}'
        repository: robotraconteur/robotraconteur
    - uses: actions/setup-python@v2
      with:
        python-version: '2.7'
        architecture: ${{ matrix.arch }}
    - name: pip
      run: |
        python -m pip install robotraconteur
    - name: test python
      env:
        ROBOTRACONTEUR_ROBDEF_PATH: '${{ github.workspace }}/testing/RobotRaconteurTest'
      run: |
        cd RobotRaconteurPython/test
        python RobotRaconteurPythonTest.py loopback
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        architecture: ${{ matrix.arch }}
    - name: pip
      run: |
        python -m pip install robotraconteur
    - name: test python3
      env:
        ROBOTRACONTEUR_ROBDEF_PATH: '${{ github.workspace }}/testing/RobotRaconteurTest'
      run: |
        cd RobotRaconteurPython/test
        python RobotRaconteurPythonTest.py loopback
    - name: setup vcpkg
      run: |
        cd ..
        git clone https://github.com/microsoft/vcpkg.git
        git clone https://github.com/robotraconteur/vcpkg-robotraconteur.git
        cd vcpkg
        git checkout 0896cfc
        bootstrap-vcpkg.bat
    - name: vcpkg build robotraconteur
      run: |
        cd ..\vcpkg
        vcpkg install --overlay-ports=..\vcpkg-robotraconteur\ports robotraconteur:${{ matrix.arch }}-windows
    - uses: haya14busa/action-cond@v1
      id: cmake_arch
      with:
        cond: ${{ matrix.arch == 'x86' }}
        if_true: "Win32"
        if_false: "x64"
    - name: dir
      run: dir ..\vcpkg\scripts\buildsystems\
      continue-on-error: true
    - name: configure cpp
      run: >
        mkdir build && cd build &&
        cmake -G "Visual Studio 16 2019" -A ${{ steps.cmake_arch.outputs.value }} 
        -DBUILD_CORE=OFF -DBUILD_TEST=ON -DBUILD_TESTING=ON
        -DCMAKE_TOOLCHAIN_FILE='..\..\vcpkg\scripts\buildsystems\vcpkg.cmake'
        -DVCPKG_TARGET_TRIPLET='${{ matrix.arch }}-windows'
        ..
    - name: build cpp
      run: |        
        cd build
        cmake --build . --config Release -j 4
    - name: test cpp
      run: |
        cd build
        ctest . -C Release --output-on-failure
      