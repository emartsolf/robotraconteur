//This file is automatically generated. DO NOT EDIT!
package com.robotraconteur.testing.TestService3;
import java.util.*;
import com.robotraconteur.*;
@RobotRaconteurServiceObjectInterface
public interface testroot3
{
    int get_readme();
    void set_readme(int value);
    int get_writeme();
    void set_writeme(int value);
    int get_unknown_modifier();
    void set_unknown_modifier(int value);
    testenum1 get_testenum1_prop();
    void set_testenum1_prop(testenum1 value);
    testcstruct1 get_testcstruct1_prop();
    void set_testcstruct1_prop(testcstruct1 value);
    teststruct3 get_teststruct3_prop();
    void set_teststruct3_prop(teststruct3 value);
    List<double[]> get_d1();
    void set_d1(List<double[]> value);
    List<double[]> get_d2();
    void set_d2(List<double[]> value);
    Map<Integer,double[]> get_d3();
    void set_d3(Map<Integer,double[]> value);
    Map<Integer,double[]> get_d4();
    void set_d4(Map<Integer,double[]> value);
    List<MultiDimArray> get_d5();
    void set_d5(List<MultiDimArray> value);
    Map<Integer,MultiDimArray> get_d6();
    void set_d6(Map<Integer,MultiDimArray> value);
    void testcstruct1_func1(testcstruct1 s);
    testcstruct1 testcstruct1_func2();
    Generator2<double[]> gen_func1();
    Generator2<UnsignedBytes> gen_func2(String name);
    Generator3<UnsignedBytes> gen_func3(String name);
    Generator1<UnsignedBytes,UnsignedBytes> gen_func4();
    Generator1<com.robotraconteur.testing.TestService1.teststruct2,com.robotraconteur.testing.TestService1.teststruct2> gen_func5();
    obj4 get_o4();
    Pipe<int[]> get_unreliable1();
    void set_unreliable1(Pipe<int[]> value);
    Pipe<int[]> get_unreliable2();
    void set_unreliable2(Pipe<int[]> value);
    Pipe<int[]> get_p1();
    void set_p1(Pipe<int[]> value);
    Pipe<int[]> get_p2();
    void set_p2(Pipe<int[]> value);
    Pipe<MultiDimArray> get_p3();
    void set_p3(Pipe<MultiDimArray> value);
    Wire<int[]> get_peekwire();
    void set_peekwire(Wire<int[]> value);
    Wire<int[]> get_pokewire();
    void set_pokewire(Wire<int[]> value);
    Wire<int[]> get_w1();
    void set_w1(Wire<int[]> value);
    Wire<int[]> get_w2();
    void set_w2(Wire<int[]> value);
    Wire<MultiDimArray> get_w3();
    void set_w3(Wire<MultiDimArray> value);
    ArrayMemory<double[]> get_readmem();
    CStructureArrayMemory<testcstruct2[]> get_cstruct_m1();
    CStructureMultiDimArrayMemory<testcstruct2[]> get_cstruct_m2();
}

