//This file is automatically generated. DO NOT EDIT!
package com.robotraconteur.testing.TestService3;
import java.util.*;
import com.robotraconteur.*;
public class testcstruct1_stub extends CStructureStub<testcstruct1> {
    public testcstruct1_stub(com__robotraconteur__testing__TestService3Factory d) {def=d;}
    private com__robotraconteur__testing__TestService3Factory def;
    public MessageElementCStructure packCStructure(RRCStructure s1) {
    vectorptr_messageelement m=new vectorptr_messageelement();
    try {
    testcstruct1 s = (testcstruct1)s1;
    MessageElementUtil.addMessageElementDispose(m,MessageElementUtil.newMessageElementDispose("d1",new double[] {s.d1}));
    MessageElementUtil.addMessageElementDispose(m,MessageElementUtil.newMessageElementDispose("d2",s.d2));
    MessageElementUtil.addMessageElementDispose(m,MessageElementUtil.newMessageElementDispose("d3",s.d3));
    MessageElementUtil.addMessageElementDispose(m,MessageElementUtil.newMessageElementDispose("d4",s.d4));
    MessageElementUtil.addMessageElementDispose(m,MessageElementUtil.newMessageElementDispose("s1",RobotRaconteurNode.s().packStructure( s.s1)));
    MessageElementUtil.addMessageElementDispose(m,MessageElementUtil.newMessageElementDispose("s2",RobotRaconteurNode.s().packStructure(s.s2)));
    MessageElementUtil.addMessageElementDispose(m,MessageElementUtil.newMessageElementDispose("s3",RobotRaconteurNode.s().packStructure(s.s3)));
    MessageElementUtil.addMessageElementDispose(m,MessageElementUtil.newMessageElementDispose("s4",RobotRaconteurNode.s().packStructure(s.s4)));
    return new MessageElementCStructure(m);
    }
    finally {
    m.delete();
    }
    }
    public testcstruct1 unpackCStructure(MessageElementCStructure m) {
    if (m == null ) throw new NullPointerException("CStructure must not be null");
    vectorptr_messageelement mm=m.getElements();
    try {
    testcstruct1 s = new testcstruct1();
    s.d1 =(MessageElementUtil.<double[]>castDataAndDispose(MessageElement.findElement(mm,"d1")))[0];
    s.d2 =MessageElementUtil.<double[]>castDataAndDispose(MessageElement.findElement(mm,"d2"));
    s.d3 =MessageElementUtil.<double[]>castDataAndDispose(MessageElement.findElement(mm,"d3"));
    s.d4 =MessageElementUtil.<double[]>castDataAndDispose(MessageElement.findElement(mm,"d4"));
    s.s1 =RobotRaconteurNode.s().<testcstruct2[]>unpackStructureDispose(MessageElementUtil.<MessageElementCStructureArray>castDataAndDispose(MessageElement.findElement(mm,"s1")))[0];
    s.s2 =RobotRaconteurNode.s().<testcstruct2[]>unpackStructureDispose(MessageElementUtil.<MessageElementCStructureArray>castDataAndDispose(MessageElement.findElement(mm,"s2")));
    s.s3 =RobotRaconteurNode.s().<testcstruct2[]>unpackStructureDispose(MessageElementUtil.<MessageElementCStructureArray>castDataAndDispose(MessageElement.findElement(mm,"s3")));
    s.s4 =RobotRaconteurNode.s().<testcstruct2[]>unpackStructureDispose(MessageElementUtil.<MessageElementCStructureArray>castDataAndDispose(MessageElement.findElement(mm,"s4")));
    return s;
    }
    finally {
    mm.delete();
    }
    }
    public String getTypeName() {return "com.robotraconteur.testing.TestService3.testcstruct1";}
    protected testcstruct1[] createArray(int count) { return new testcstruct1[count]; }
}
